import { dataitems1 } from "./dataitems1.js"; import { dataitems2 } from "./dataitems2.js"; import { stakeholders } from "./stakeholders.js"; import { stakeholdersicons } from "./stakeholdersicons.js"; !function () { var t = window.innerWidth, e = window.innerWidth / 16 + 658; !function r() { var a, n = d3.select("body").append("svg").attr("class", "chart").attr("width", t).attr("height", e), i = n.append("g"), l = n.append("g"), o = n.append("g"), s = n.append("g"), c = n.append("g"), d = (n.append("g"), n.append("g")), u = n.append("g"), p = (n.append("g"), n.append("g")); p.append("rect").attr("width", 80).attr("height", 40).attr("fill", "white").attr("stroke", "#b7b7b7").attr("stroke-width", 1), p.append("text").style("fill", "grey").style("font-size", "14px").attr("dy", ".35em").attr("x", 20).attr("y", 20).style("style", "label").text("replay"), p.style("cursor", "pointer").on("click", () => { document.querySelector("body").removeChild(document.querySelector(".chart")), r() }); var h = d3.select("body").append("div").attr("class", "tooltip").style("opacity", 0), f = (t, e) => { $("#exampleModal").find(".modal-title").text(t), $("#exampleModal").find(".modal-body").html(e), $("#exampleModal").modal("toggle") }; let g = []; var y; let m = []; var x = t => t.reduce((t, e) => t.concat(e), []), v = 0, A = 0, b = (r, a) => { const n = e / 12, l = 5, o = 57, s = (t / 2 - 200 - 2 * l) / (o + 1) * r.length, c = (t / 2 - 200 - 2 * l) / (o + 1), d = r.length, u = 200, p = .02, h = .2, g = c / 2 + 1, y = d3.scaleLinear().range([6, s - 6]), m = d3.scaleLinear().range([n - 6, 6]), b = d3.scaleLinear().range([g, 2]); new Set(r); const k = i; !0 === a && clearInterval(v), v = setInterval(function () { var t = k.selectAll(".g1").data(function () { A++; var t = d3.range(u).map(function (t) { var e = t * h - p * A; return [{ gene: r[t], x: t, y: Math.cos(e), z: Math.sin(e) }, { gene: r[t], x: t, y: Math.cos(e - Math.PI), z: Math.sin(e - Math.PI) }] }), e = x(t); return y.domain(d3.extent(e.slice(0, 2 * d), function (t) { return t.x })), m.domain(d3.extent(e, function (t) { return t.y })), b.domain(d3.extent(e, function (t) { return t.z })), t.slice(0, d) }()); t.exit().remove(); var a = t.enter().append("g").attr("class", "g1").each(function (t, r) { var a = d3.select(this).selectAll("[nodetype=gc1]").data(t).enter().append("g").attr("class", "gc").attr("nodetype", "gc1"), n = a.append("circle").attr("fill", "grey"); n.attr("r", 10).attr("fill-opacity", .1).transition().duration(1e3).attr("r", 1).attr("fill-opacity", .3), a.attr("transform", t => "translate(" + t.gene.fromx + ", " + t.gene.fromy + " )").transition().duration(1e3).attr("transform", function (t) { return r > o ? "translate(" + (y(t.x) - c * (o + 1) + l) + "," + (0 + e / 8 * 6 + 80) + ")scale(" + g + "," + g + ")" : "translate(" + (y(t.x) + l) + "," + (0 + e / 8 * 6) + ")scale(" + g + "," + g + ")" }), n.transition().delay(2e3).duration(1).attr("r", 0), a.transition().delay(1e3).attr("nodetype", "gc2"); var i = d3.select(this).selectAll(".g2").data(t).enter().append("g").attr("class", "g2").append("circle"); i.attr("r", 0), i.transition().delay(2e3).duration(1).attr("r", 1).attr("fill", function (t, e) { return t.gene.color }); var s = d3.select(this).selectAll("line").data(t).enter().append("line"); s.attr("stroke", function (t, e) { return t.gene.color }).attr("stroke-width", 0), s.transition().delay(1e3).duration(200).attr("stroke-width", 2), s.on("mouseover", t => { d3.select(this).style("cursor", "pointer"), d3.select(this).selectAll(".g2").selectAll("circle").attr("r", "2"), d3.select(this).selectAll("line").attr("stroke-width", 4) }).on("mouseout", t => { d3.select(this).style("cursor", "default"), d3.select(this).selectAll(".g2").selectAll("circle").attr("r", "1"), d3.select(this).selectAll("line").attr("stroke-width", 2) }).on("click", t => { f("transaction", t[0].gene.modalbody) }), i.on("mouseover", t => { d3.select(this).style("cursor", "pointer"), d3.select(this).selectAll(".g2").selectAll("circle").attr("r", "2"), d3.select(this).selectAll("line").attr("stroke-width", 4) }).on("mouseout", t => { d3.select(this).style("cursor", "default"), d3.select(this).selectAll(".g2").selectAll("circle").attr("r", "1"), d3.select(this).selectAll("line").attr("stroke-width", 2) }).on("click", t => { f("transaction", t.gene.modalbody) }) }); t.merge(a).each(function (t, r) { var a = t[0].y < t[1].y ? 1 : -1; d3.select(this).selectAll(".g2").data(t).attr("transform", function (t, a) { return r > o ? "translate(" + (y(t.x) - c * (o + 1) + l) + "," + (m(t.y) + e / 8 * 6 + 80) + ")scale(" + b(t.z) + "," + b(t.z) + ")" : "translate(" + (y(t.x) + l) + "," + (m(t.y) + e / 8 * 6) + ")scale(" + b(t.z) + "," + b(t.z) + ")" }).attr("fill-opacity", function (t) { return b(t.z) / 10 }), d3.select(this).selectAll("[nodetype=gc2]").data(t).transition().duration(100).attr("transform", function (t) { return r > o ? "translate(" + (y(t.x) - c * (o + 1) + l) + "," + (m(t.y) + e / 8 * 6 + 80) + ")scale(" + b(t.z) + "," + b(t.z) + ")" : "translate(" + (y(t.x) + l) + "," + (m(t.y) + e / 8 * 6) + ")scale(" + b(t.z) + "," + b(t.z) + ")" }).attr("fill-opacity", function (t) { return b(t.z) / 10 }), d3.select(this).select("line").attr("x2", function (e, a) { return r > o ? y(t[0].x) - c * (o + 1) + l : y(t[0].x) + l }).attr("x1", function (e, a) { return r > o ? y(t[0].x) - c * (o + 1) + l : y(t[0].x) + l }).attr("y2", function (n, i) { return r > o ? m(t[0].y) - a * b(t[0].z) + e / 8 * 6 + 80 : m(t[0].y) - a * b(t[0].z) + e / 8 * 6 }).attr("y1", function (n, i) { return r > o ? m(t[1].y) + a * b(t[1].z) + e / 8 * 6 + 80 : m(t[1].y) + a * b(t[1].z) + e / 8 * 6 }).attr("opacity", .3 * a * (t[1].y - t[0].y)) }) }, 50) }, k = 0, w = 0, M = (r, a) => { const n = e / 12, i = 5, l = 53, o = (t / 2 - 200 - 2 * i) / (l + 1) * r.length, s = (t / 2 - 200 - 2 * i) / (l + 1), d = r.length, u = 200, p = .02, h = .2, g = s / 2 + 1, y = d3.scaleLinear().range([6, o - 6]), m = d3.scaleLinear().range([n - 6, 6]), v = d3.scaleLinear().range([g, 2]); new Set(r); const A = c; !0 === a && clearInterval(k), k = setInterval(function () { var a = A.selectAll(".g1").data(function () { w++; var t = d3.range(u).map(function (t) { var e = t * h - p * w; return [{ gene: r[t], x: t, y: Math.cos(e), z: Math.sin(e) }, { gene: r[t], x: t, y: Math.cos(e - Math.PI), z: Math.sin(e - Math.PI) }] }), e = x(t); return y.domain(d3.extent(e.slice(0, 2 * d), function (t) { return t.x })), m.domain(d3.extent(e, function (t) { return t.y })), v.domain(d3.extent(e, function (t) { return t.z })), t.slice(0, d) }()); a.exit().remove(); var n = a.enter().append("g").attr("class", "g1").each(function (r, a) { var n = d3.select(this).selectAll("[nodetype=gc1]").data(r).enter().append("g").attr("class", "gc").attr("nodetype", "gc1"), o = n.append("circle").attr("fill", "grey"); o.attr("r", 10).attr("fill-opacity", .1).transition().duration(1e3).attr("r", 1).attr("fill-opacity", .3), n.attr("transform", t => "translate(" + t.gene.fromx + ", " + t.gene.fromy + " )").transition().duration(1e3).attr("transform", function (r) { return a > l ? "translate(" + (y(r.x) + t / 2 + 200 - s * (l + 1) + i) + "," + (0 + e / 8 * 6 + 80) + ")scale(" + g + "," + g + ")" : "translate(" + (y(r.x) + t / 2 + 200 + i) + "," + (0 + e / 8 * 6) + ")scale(" + g + "," + g + ")" }), o.transition().delay(2e3).duration(1).attr("r", 0), n.transition().delay(1e3).attr("nodetype", "gc2"); var c = d3.select(this).selectAll(".g2").data(r).enter().append("g").attr("class", "g2").append("circle"); c.attr("r", 0), c.transition().delay(2e3).duration(1).attr("r", 1).attr("fill", function (t, e) { return t.gene.color }); var d = d3.select(this).selectAll("line").data(r).enter().append("line"); d.attr("stroke", function (t, e) { return t.gene.color }).attr("stroke-width", 0), d.transition().delay(1e3).duration(200).attr("stroke-width", 2), d.on("mouseover", t => { d3.select(this).style("cursor", "pointer"), d3.select(this).selectAll(".g2").selectAll("circle").attr("r", "2"), d3.select(this).selectAll("line").attr("stroke-width", 4) }).on("mouseout", t => { d3.select(this).style("cursor", "default"), d3.select(this).selectAll(".g2").selectAll("circle").attr("r", "1"), d3.select(this).selectAll("line").attr("stroke-width", 2) }).on("click", t => { f("transaction", t[0].gene.modalbody) }), c.on("mouseover", t => { d3.select(this).style("cursor", "pointer"), d3.select(this).selectAll(".g2").selectAll("circle").attr("r", "2"), d3.select(this).selectAll("line").attr("stroke-width", 4) }).on("mouseout", t => { d3.select(this).style("cursor", "default"), d3.select(this).selectAll(".g2").selectAll("circle").attr("r", "1"), d3.select(this).selectAll("line").attr("stroke-width", 2) }).on("click", t => { f("transaction", t.gene.modalbody) }) }); a.merge(n).each(function (r, a) { var n = r[0].y < r[1].y ? 1 : -1; d3.select(this).selectAll(".g2").data(r).attr("transform", function (r, n) { return a > l ? "translate(" + (y(r.x) + t / 2 + 200 - s * (l + 1) + i) + "," + (m(r.y) + e / 8 * 6 + 80) + ")scale(" + v(r.z) + "," + v(r.z) + ")" : "translate(" + (y(r.x) + t / 2 + 200 + i) + "," + (m(r.y) + e / 8 * 6) + ")scale(" + v(r.z) + "," + v(r.z) + ")" }).attr("fill-opacity", function (t) { return v(t.z) / 10 }), d3.select(this).selectAll("[nodetype=gc2]").data(r).transition().duration(100).attr("transform", function (r) { return a > l ? "translate(" + (y(r.x) + t / 2 + 200 - s * (l + 1) + i) + "," + (m(r.y) + e / 8 * 6 + 80) + ")scale(" + v(r.z) + "," + v(r.z) + ")" : "translate(" + (y(r.x) + t / 2 + 200 + i) + "," + (m(r.y) + e / 8 * 6) + ")scale(" + v(r.z) + "," + v(r.z) + ")" }).attr("fill-opacity", function (t) { return v(t.z) / 10 }), d3.select(this).select("line").attr("x2", function (e, n) { return a > l ? y(r[0].x) + t / 2 + 200 - s * (l + 1) + i : y(r[0].x) + t / 2 + 200 + i }).attr("x1", function (e, n) { return a > l ? y(r[0].x) + t / 2 + 200 - s * (l + 1) + i : y(r[0].x) + t / 2 + 200 + i }).attr("y2", function (t, i) { return a > l ? m(r[0].y) - n * v(r[0].z) + e / 8 * 6 + 80 : m(r[0].y) - n * v(r[0].z) + e / 8 * 6 }).attr("y1", function (t, i) { return a > l ? m(r[1].y) + n * v(r[1].z) + e / 8 * 6 + 80 : m(r[1].y) + n * v(r[1].z) + e / 8 * 6 }).attr("opacity", .3 * n * (r[1].y - r[0].y)) }) }, 50) }; function C(t) { return Math.floor(Math.random() * Math.floor(t)) } let z = function () { const r = { x: t / 2, y: 5 }; let a = null; const n = d3.forceSimulation().force("charge", d3.forceManyBody().strength(1)).force("x", d3.forceX().strength(.05).x(r.x - 55)).force("y", d3.forceY().strength(.05).y(r.y)).force("collision", d3.forceCollide(12)); function i() { a.selectAll("[nodetype=rect]").attr("transform", t => "translate(" + t.x + "," + t.y + ")").attr("cx", function (t) { return t.x = t.x > r.x - t.radius - 4 ? r.x - t.radius - 4 : t.x }).attr("cy", function (t) { return t.y = t.y > t.radius + 5 ? t.y : t.radius + 5 }) } return n.stop(), n.alpha(.05), n.alphaDecay(0), d3.scaleOrdinal().domain(["1", "2", "3", "5", "99"]).range(["#0074D9", "#7FDBFF", "#39CCCC", "#3D9970", "#AAAAAA"]), function (r, l) { (a = r).attr("width", t).attr("height", e), a.selectAll("[nodetype=rect]").data(l, t => t.id).enter().append("g").attr("nodetype", "rect").append("circle").classed("bubble", !0).on("mouseover", function (t) { h.transition().duration(200).style("opacity", .9), h.html(t.modalbody).style("left", d3.event.pageX - 40 + "px").style("top", d3.event.pageY + 40 + "px") }).on("mouseout", function (t) { h.transition().duration(500).style("opacity", 0) }).attr("r", t => t.radius / 5).attr("fill", t => "#7FDBFF").transition().duration(200).attr("r", t => t.radius), n.nodes(l).on("tick", i).restart() } }(); function S(t) { z(l, t) } let F = function () { const r = { x: t / 2, y: 5 }; let a = null; const n = d3.forceSimulation().force("charge", d3.forceManyBody().strength(1)).force("x", d3.forceX().strength(.05).x(r.x + 55)).force("y", d3.forceY().strength(.05).y(r.y)).force("collision", d3.forceCollide(12)); function i() { a.selectAll("[nodetype=rect]").attr("transform", t => "translate(" + t.x + "," + t.y + ")").attr("cx", function (t) { return t.x = t.x > r.x + t.radius + 4 ? t.x : r.x + t.radius + 4 }).attr("cy", function (t) { return t.y = t.y > t.radius + 5 ? t.y : t.radius + 5 }) } return n.stop(), n.alpha(.05), n.alphaDecay(0), d3.scaleOrdinal().domain(["1", "2", "3", "5", "99"]).range(["#0074D9", "#7FDBFF", "#39CCCC", "#3D9970", "#AAAAAA"]), function (r, l) { (a = r).attr("width", t).attr("height", e), a.selectAll("[nodetype=rect]").data(l, t => t.id).enter().append("g").attr("nodetype", "rect").append("circle").classed("bubble", !0).on("mouseover", function (t) { h.transition().duration(200).style("opacity", .9), h.html(t.modalbody).style("left", d3.event.pageX - 40 + "px").style("top", d3.event.pageY + 40 + "px") }).on("mouseout", function (t) { h.transition().duration(500).style("opacity", 0) }).attr("r", t => t.radius / 5).attr("fill", t => "#39CCCC").transition().duration(200).attr("r", t => t.radius), n.nodes(l).on("tick", i).restart() } }(); function E(t) { F(s, t) } let P = function () { let r = null; return function (a, n) { (r = a).attr("width", t).attr("height", e), r.selectAll("[nodetype=sh2]").data(n, t => t.id).enter().append("g").attr("nodetype", "sh2").append("svg:image").attr("xlink:href", t => stakeholdersicons.loc[t.stype]).attr("width", 30).attr("height", 30).attr("x", (e, r) => { let a = e.hoff; return e.sx = t / 2 - 144 + 24 + 48 * Math.floor(r / 5) + a - 15, t / 2 - 144 + 24 + 48 * Math.floor(r / 5) + a - 15 }).attr("y", (t, r) => { let a = t.voff; return t.sy = e / 4 + 320 + 48 * Math.floor(r % 5) + a - 15, e / 4 + 320 + 48 * Math.floor(r % 5) + a - 15 }), r.selectAll("[nodetype=sh1]").data(n, t => t.id).enter().append("g").attr("nodetype", "sh1").append("circle").on("mouseover", function (t) { h.transition().duration(200).style("opacity", .9), h.html(t.stype + ": " + t.name, t.modalbody).style("left", d3.event.pageX - 40 + "px").style("top", d3.event.pageY - 40 + "px") }).on("mouseout", function (t) { h.transition().duration(500).style("opacity", 0) }).attr("transform", (r, a) => { let n = r.hoff; r.sx = t / 2 - 144 + 24 + 48 * Math.floor(a / 5) + n; let i = r.voff; return r.sy = e / 4 + 320 + 48 * Math.floor(a % 5) + i, "translate(" + (t / 2 - 144 + 24 + 48 * Math.floor(a / 5) + n) + "," + (e / 4 + 320 + 48 * Math.floor(a % 5) + i) + ")" }).attr("width", 40).attr("height", 40).attr("r", 18).attr("fill", "transparent").attr("fill-opacity", .3).attr("stroke", "#b7b7b7").attr("stroke-width", 6) } }(); for (var I = [], B = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]; B.length > 0;) { let t = C(B.length), e = B[t]; stakeholders.data[e].hoff = C(18) - 9, stakeholders.data[e].voff = C(18) - 9, I.push(stakeholders.data[e]), B.splice(t, 1) } P(o, I); var D = I.reduce(function (t, e) { return t[e.stype] = t[e.stype] || [], t[e.stype].push(e), t }, {}); async function T(t) { const e = (new TextEncoder).encode(t), r = await crypto.subtle.digest("SHA-256", e); return Array.from(new Uint8Array(r)).map(t => t.toString(16).padStart(2, "0")).join("") } async function L(t) { for (var e = unescape(encodeURIComponent(t)), r = new Uint8Array(e.length), a = 0; a < e.length; a++)r[a] = e.charCodeAt(a); const n = await crypto.subtle.digest("SHA-256", r); return Array.from(new Uint8Array(n)).map(t => t.toString(16).padStart(2, "0")).join("") } !function () { var e = t / 5, r = e - 170, n = d3.range(840).map(d3.scaleSequential().domain([0, 840]).interpolator(d3.interpolateRainbow)), i = []; for (let t = 0; t < 840; ++t)switch (Math.floor(t / 140)) { case 0: (t - 0) % Math.ceil(140 / 3) == 0 && i.push(n[t]); break; case 1: (t - 140) % Math.ceil(10) == 0 && i.push(n[t]); break; case 2: (t - 280) % Math.ceil(140 / 9) == 0 && i.push(n[t]); break; case 3: (t - 420) % Math.ceil(35) == 0 && i.push(n[t]); break; case 4: (t - 560) % Math.ceil(35) == 0 && i.push(n[t]); break; case 5: (t - 700) % Math.ceil(28) == 0 && i.push(n[t]) }var o = d3.scaleOrdinal().domain(["System Planning", "General Specifications", "Building Specifications", "Main Components Availability", "Machine Availability", "Frequency Inverter", "Elevator Car", "Counterweight", "Guides on Elevator Car / Counterweight", "Guide rails", "Rope System", "Shaft equipment", "Painting / priming", "Landing door / Car door", "Progressive safety gear", "Speed governor", "Buffer", "Decoration Components", "Ceiling", "Car Lighting", "Car Walls", "Floor", "Handrails", "Mirrors", "Car Operating Panel", "Car Entrance", "Accessories", "Control Systems", "Safety System", "Others", "Occurring Forces", "Shaft ceiling", "Shaft pit floor", "Extraordinary load of machine base frame", "Architecture Specifications", "Pit", "Fire protection approval", "Hoistway Wall", "Machine Room"]).range(i); a = o; var s = d3.cluster().size([360, r]).separation(function (t, e) { return 1 }), c = d, u = c.append("g").attr("class", "legend").selectAll("g").data(o.domain()).enter().append("g").attr("transform", function (e, r) { return r < 17 ? "translate(" + (t / 2 + 10) + "," + (10 * r + 250) + ")" : "translate(" + (t / 2 + 20) + "," + (10 * (r - 17) + 250) + ")" }).style("font-size", "10px"); y = u, u.append("rect").attr("x", -18).attr("width", 10).attr("height", 10).attr("fill", o), u.append("text").attr("x", (t, e) => e < 17 ? -24 : 0).attr("y", 9).attr("dy", ".10em").style("font-weight", (t, e) => { switch (e) { case 0: case 3: case 17: case 26: case 30: case 34: return "bold"; default: return "normal" } }).attr("text-anchor", (t, e) => e < 17 ? "end" : "start").text(function (t) { return t }); var p = c.append("g").attr("nodetype", "treec").attr("transform", "translate(" + e + "," + e + ")"); function h(t) { return t.data.length + (t.children ? d3.max(t.children, h) : 0) } function f(t) { var e = t.data.name; t.color = o.domain().indexOf(e) >= 0 ? o(e) : t.parent ? t.parent.color : null, t.children && t.children.forEach(f) } function m(t) { return b(t.source.x, t.source.radius, t.target.x, t.target.radius) } function x(t) { return b(t.source.x, t.source.y, t.target.x, t.target.y) } function v(t) { return b(t.target.x, t.target.radius, t.target.x, r) } function A(t) { return b(t.target.x, t.target.y, t.target.x, r) } function b(t, e, r, a) { var n = Math.cos(t = (t - 90) / 180 * Math.PI), i = Math.sin(t), l = Math.cos(r = (r - 90) / 180 * Math.PI), o = Math.sin(r); return "M" + e * n + "," + e * i + (r === t ? "" : "A" + e + "," + e + " 0 0 " + (r > t ? 1 : 0) + " " + e * l + "," + e * o) + "L" + a * l + "," + a * o } d3.text("attributes1.txt", function (t, e) { if (t) throw t; var a = d3.hierarchy(function (t) { for (var e = [], r = {}, a = t.split(/\s*(;|\(|\)|,|:)\s*/), n = 0; n < a.length; n++) { var i = a[n]; switch (i) { case "(": var l = {}; r.branchset = [l], e.push(r), r = l; break; case ",": l = {}, e[e.length - 1].branchset.push(l), r = l; break; case ")": r = e.pop(); break; case ":": break; default: var o = a[n - 1]; ")" == o || "(" == o || "," == o ? r.name = i : ":" == o && (r.length = parseFloat(i)) } } return r }(e), function (t) { return t.branchset }).sum(function (t) { return t.branchset ? 0 : 1 }); s(a); var n = d3.select("#show-length input").on("change", d), i = setTimeout(function () { n.property("checked", !0).each(d) }, 2e3); !function t(e, r, a) { e.radius = (r += e.data.length) * a, e.children && e.children.forEach(function (e) { t(e, r, a) }) }(a, a.data.length = 0, r / h(a)), f(a); var o = p.append("g").attr("class", "link-extensions").selectAll("path").data(a.links().filter(function (t) { return !t.target.children })).enter().append("path").each(function (t) { t.target.linkExtensionNode = this }).attr("d", A), c = p.append("g").attr("class", "links").selectAll("path").data(a.links()).enter().append("path").each(function (t) { t.target.linkNode = this }).attr("d", x).attr("stroke", function (t) { return t.target.color }); function d() { clearTimeout(i); var t = d3.transition().duration(750); o.transition(t).attr("d", this.checked ? v : A), c.transition(t).attr("d", this.checked ? m : x) } function y(t) { return function (e) { !0 === t ? l.selectAll("[nodetype=rect]").selectAll("circle").attr("r", t => e.data.ind === t.id ? t.radius + 1 : t.radius).attr("fill", t => e.data.ind === t.id ? "blue" : "#7FDBFF") : l.selectAll("[nodetype=rect]").selectAll("circle").attr("r", t => t.radius).attr("fill", t => "#7FDBFF"), d3.select(this).classed("label--active", t), !0 === t ? u.each(function (t, r) { t === e.parent.data.name && d3.select(this).selectAll("text").style("fill", "red").style("font-weight", "bold") }) : u.each(function (t, e) { d3.select(this).selectAll("text").style("fill", ""), d3.select(this).selectAll("text").style("font-weight", (t, r) => { switch (e) { case 0: case 3: case 17: case 26: case 30: case 34: return "bold"; default: return "normal" } }) }), d3.select(e.linkExtensionNode).classed("link-extension--active", t).each(b); do { d3.select(e.linkNode).classed("link--active", t).each(b) } while (e = e.parent) } } function b() { } p.append("g").attr("class", "labels").selectAll("text").data(a.leaves()).enter().append("text").attr("dy", ".31em").attr("transform", function (t) { return "rotate(" + (t.x - 90) + ")translate(" + (r + 4) + ",0)" + (t.x < 180 ? "" : "rotate(180)") }).attr("text-anchor", function (t) { return t.x < 180 ? "start" : "end" }).text(function (t) { return t.data.name.replace(/_/g, " ") }).on("mouseover", y(!0)).on("mouseout", y(!1)), p.selectAll("text").each(function (t, e) { var r = this.getBoundingClientRect(); t.data.ind = e, r.x ? g[e] = { parent: t.parent.data.name, pparent: t.parent.parent.data.name, name: t.data.name, x: r.x + r.width / 2, y: r.y + r.height / 2 } : g[e] = { parent: t.parent.data.name, pparent: t.parent.parent.data.name, name: t.data.name, x: (r.left + r.right) / 2, y: (r.top + r.bottom) / 2 } }) }) }(), function () { var e = t / 5, r = e - 170, n = d3.range(840).map(d3.scaleSequential().domain([0, 840]).interpolator(d3.interpolateRainbow)), i = []; for (let t = 0; t < 840; ++t)switch (Math.floor(t / 140)) { case 0: (t - 0) % Math.ceil(140 / 3) == 0 && i.push(n[t]); break; case 1: (t - 140) % Math.ceil(10) == 0 && i.push(n[t]); break; case 2: (t - 280) % Math.ceil(140 / 9) == 0 && i.push(n[t]); break; case 3: (t - 420) % Math.ceil(35) == 0 && i.push(n[t]); break; case 4: (t - 560) % Math.ceil(35) == 0 && i.push(n[t]); break; case 5: (t - 700) % Math.ceil(28) == 0 && i.push(n[t]) }var l = d3.scaleOrdinal().domain(["System Planning", "General Specifications", "Building Specifications", "Main Components Availability", "Machine Availability", "Frequency Inverter", "Elevator Car", "Counterweight", "Guides on Elevator Car / Counterweight", "Guide rails", "Rope System", "Shaft equipment", "Painting / priming", "Landing door / Car door", "Progressive safety gear", "Speed governor", "Buffer", "Decoration Components", "Ceiling", "Car Lighting", "Car Walls", "Floor", "Handrails", "Mirrors", "Car Operating Panel", "Car Entrance", "Accessories", "Control Systems", "Safety System", "Others", "Occurring Forces", "Shaft ceiling", "Shaft pit floor", "Extraordinary load of machine base frame", "Architecture Specifications", "Pit", "Fire protection approval", "Hoistway Wall", "Machine Room"]).range(i); a = l; var o = d3.cluster().size([360, r]).separation(function (t, e) { return 1 }), c = u.append("g").attr("nodetype", "treec").attr("transform", "translate(" + (t - e) + "," + e + ")"); function d(t) { return t.data.length + (t.children ? d3.max(t.children, d) : 0) } function p(t) { var e = t.data.name; t.color = l.domain().indexOf(e) >= 0 ? l(e) : t.parent ? t.parent.color : null, t.children && t.children.forEach(p) } function h(t) { return v(t.source.x, t.source.radius, t.target.x, t.target.radius) } function f(t) { return v(t.source.x, t.source.y, t.target.x, t.target.y) } function g(t) { return v(t.target.x, t.target.radius, t.target.x, r) } function x(t) { return v(t.target.x, t.target.y, t.target.x, r) } function v(t, e, r, a) { var n = Math.cos(t = (t - 90) / 180 * Math.PI), i = Math.sin(t), l = Math.cos(r = (r - 90) / 180 * Math.PI), o = Math.sin(r); return "M" + e * n + "," + e * i + (r === t ? "" : "A" + e + "," + e + " 0 0 " + (r > t ? 1 : 0) + " " + e * l + "," + e * o) + "L" + a * l + "," + a * o } d3.text("attributes2.txt", function (t, e) { if (t) throw t; var a = d3.hierarchy(function (t) { for (var e = [], r = {}, a = t.split(/\s*(;|\(|\)|,|:)\s*/), n = 0; n < a.length; n++) { var i = a[n]; switch (i) { case "(": var l = {}; r.branchset = [l], e.push(r), r = l; break; case ",": l = {}, e[e.length - 1].branchset.push(l), r = l; break; case ")": r = e.pop(); break; case ":": break; default: var o = a[n - 1]; ")" == o || "(" == o || "," == o ? r.name = i : ":" == o && (r.length = parseFloat(i)) } } return r }(e), function (t) { return t.branchset }).sum(function (t) { return t.branchset ? 0 : 1 }); o(a); var n = d3.select("#show-length input").on("change", v), i = setTimeout(function () { n.property("checked", !0).each(v) }, 2e3); !function t(e, r, a) { e.radius = (r += e.data.length) * a, e.children && e.children.forEach(function (e) { t(e, r, a) }) }(a, a.data.length = 0, r / d(a)), p(a); var l = c.append("g").attr("class", "link-extensions").selectAll("path").data(a.links().filter(function (t) { return !t.target.children })).enter().append("path").each(function (t) { t.target.linkExtensionNode = this }).attr("d", x), u = c.append("g").attr("class", "links").selectAll("path").data(a.links()).enter().append("path").each(function (t) { t.target.linkNode = this }).attr("d", f).attr("stroke", function (t) { return t.target.color }); function v() { clearTimeout(i); var t = d3.transition().duration(750); l.transition(t).attr("d", this.checked ? g : x), u.transition(t).attr("d", this.checked ? h : f) } function A(t) { return function (e) { !0 === t ? s.selectAll("[nodetype=rect]").selectAll("circle").attr("r", t => e.data.ind === t.id ? t.radius + 1 : t.radius).attr("fill", t => e.data.ind === t.id ? "green" : "#39CCCC") : s.selectAll("[nodetype=rect]").selectAll("circle").attr("r", t => t.radius).attr("fill", t => "#39CCCC"), d3.select(this).classed("label--active", t), !0 === t ? y.each(function (t, r) { t === e.parent.data.name && d3.select(this).selectAll("text").style("fill", "red").style("font-weight", "bold") }) : y.each(function (t, e) { d3.select(this).selectAll("text").style("fill", ""), d3.select(this).selectAll("text").style("font-weight", (t, r) => { switch (e) { case 0: case 3: case 17: case 26: case 30: case 34: return "bold"; default: return "normal" } }) }), d3.select(e.linkExtensionNode).classed("link-extension--active", t).each(b); do { d3.select(e.linkNode).classed("link--active", t).each(b) } while (e = e.parent) } } function b() { } c.append("g").attr("class", "labels").selectAll("text").data(a.leaves()).enter().append("text").attr("dy", ".31em").attr("transform", function (t) { return "rotate(" + (t.x - 90) + ")translate(" + (r + 4) + ",0)" + (t.x < 180 ? "" : "rotate(180)") }).attr("text-anchor", function (t) { return t.x < 180 ? "start" : "end" }).text(function (t) { return t.data.name.replace(/_/g, " ") }).on("mouseover", A(!0)).on("mouseout", A(!1)), c.selectAll("text").each(function (t, e) { var r = this.getBoundingClientRect(); t.data.ind = e, r.x ? m[e] = { parent: t.parent.data.name, pparent: t.parent.parent.data.name, name: t.data.name, x: r.x + r.width / 2, y: r.y + r.height / 2 } : m[e] = { parent: t.parent.data.name, pparent: t.parent.parent.data.name, name: t.data.name, x: (r.left + r.right) / 2, y: (r.top + r.bottom) / 2 } }) }) }(); var O = [], R = [], q = {}, N = {}; setTimeout(() => { for (let t of dataitems1.data) setTimeout(() => { q[t.sender] || (q[t.sender] = D[t.sender][C(D[t.sender].length)]), q[t.receiver] || (q[t.receiver] = D[t.receiver][C(D[t.receiver].length)]), O.push({ id: t.id, groupid: t.groupid, radius: t.radius, x: g[t.from].x, y: g[t.from].y, modaltitle: "data", modalbody: "<p>" + g[t.from].pparent + "</p><p>=>" + g[t.from].parent + "</p><p>==>" + g[t.from].name + ": " + t.datavalue + "</p><p>sender: " + q[t.sender].name + "</p><p>receiver: " + q[t.receiver].name + "</p>" }), S(O) }, t.delay + C(500)), setTimeout(() => { q[t.sender] || (q[t.sender] = D[t.sender][C(D[t.sender].length)]), q[t.receiver] || (q[t.receiver] = D[t.receiver][C(D[t.receiver].length)]), window.TextEncoder ? T("" + C(2e3)).then(e => { R.push({ id: t.id, color: a(g[t.from].parent), groupid: t.groupid, radius: t.radius, fromx: q[t.sender].sx, fromy: q[t.sender].sy, modaltitle: "data", modalbody: "<p>triggerer: " + g[t.from].pparent + "->" + g[t.from].parent + "->" + g[t.from].name + "</p><p>sender: " + q[t.sender].name + "</p><p>receiver: " + q[t.receiver].name + "</p><p>token: " + e.substring(0, 50) + "</p>" }), b(R, !0) }) : L("" + C(2e3)).then(e => { R.push({ id: t.id, color: a(g[t.from].parent), groupid: t.groupid, radius: t.radius, fromx: q[t.sender].sx, fromy: q[t.sender].sy, modaltitle: "data", modalbody: "<p>triggerer: " + g[t.from].pparent + "->" + g[t.from].parent + "->" + g[t.from].name + "</p><p>sender: " + q[t.sender].name + "</p><p>receiver: " + q[t.receiver].name + "</p><p>token: " + e.substring(0, 50) + "</p>" }), b(R, !0) }), d.selectAll("[nodetype=treec]").selectAll("text").each(function (e, r) { r === t.from && d3.select(this).attr("class", "label--poping").attr("fill", "#7FDBFF").transition().delay(500).attr("fill", "black").attr("class", "") }) }, t.delay + 500 + C(200)) }, C(2e3)); var j = [], G = []; setTimeout(() => { for (let t of dataitems2.data) setTimeout(() => { N[t.sender] || (N[t.sender] = D[t.sender][C(D[t.sender].length)]), N[t.receiver] || (N[t.receiver] = D[t.receiver][C(D[t.receiver].length)]), j.push({ id: t.id, groupid: t.groupid, radius: t.radius, x: m[t.from].x, y: m[t.from].y, modaltitle: "data", modalbody: "<p>" + m[t.from].pparent + "</p><p>=>" + m[t.from].parent + "</p><p>==>" + m[t.from].name + "</p><p>sender: " + N[t.sender].name + "</p><p>receiver: " + N[t.receiver].name + "</p>" }), E(j) }, t.delay + C(500)), setTimeout(() => { N[t.sender] || (N[t.sender] = D[t.sender][C(D[t.sender].length)]), N[t.receiver] || (N[t.receiver] = D[t.receiver][C(D[t.receiver].length)]), window.TextEncoder ? T("" + (2e3 + C(2e3))).then(e => { G.push({ id: t.id, color: a(m[t.from].parent), groupid: t.groupid, radius: t.radius, fromx: N[t.sender].sx, fromy: N[t.receiver].sy, modaltitle: "data", modalbody: "<p>triggerer: " + m[t.from].pparent + "->" + m[t.from].parent + "->" + m[t.from].name + ": " + t.datavalue + "</p><p>sender: " + N[t.sender].name + "</p><p>receiver: " + N[t.receiver].name + "</p><p>token: " + e.substring(0, 50) + "</p>" }), M(G, !0) }) : L("" + (2e3 + C(2e3))).then(e => { G.push({ id: t.id, color: a(m[t.from].parent), groupid: t.groupid, radius: t.radius, fromx: N[t.sender].sx, fromy: N[t.receiver].sy, modaltitle: "data", modalbody: "<p>triggerer: " + m[t.from].pparent + "->" + m[t.from].parent + "->" + m[t.from].name + ": " + t.datavalue + "</p><p>sender: " + N[t.sender].name + "</p><p>receiver: " + N[t.receiver].name + "</p><p>token: " + e.substring(0, 50) + "</p>" }), M(G, !0) }), u.selectAll("[nodetype=treec]").selectAll("text").each(function (e, r) { r === t.from && d3.select(this).attr("class", "label--poping").attr("fill", "#39CCCC").transition().delay(500).attr("fill", "black").attr("class", "") }) }, t.delay + 500 + C(200)) }, 2e3 + C(3e3)) }() }();